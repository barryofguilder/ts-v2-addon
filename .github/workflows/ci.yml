name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  install-cache:
    name: 'Install Cache'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Use Node
        uses: volta-cli/action@v4

      - name: Cache npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          npm ci

  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: install-cache

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Node
        uses: volta-cli/action@v4

      - name: Restore npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Build addon
        run: npm run build

      - name: Lint
        run: npm run lint

  test:
    name: 'Tests'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: install-cache

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Node
        uses: volta-cli/action@v4

      - name: Restore npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Build addon
        run: npm run build

      - name: Run Tests
        run: npm run test:ember

  # floating:
  #   name: 'Floating Dependencies'
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #         cache: npm
  #     - name: Install Dependencies
  #       run: npm ci
  #     - name: Run Tests
  #       run: npm run test

  # try-scenarios:
  #   name: ${{ matrix.try-scenario }}
  #   runs-on: ubuntu-latest
  #   needs: 'test'

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       try-scenario:
  #         - ember-lts-4.8
  #         - ember-lts-4.12
  #         - ember-release
  #         - ember-beta
  #         - ember-canary
  #         - embroider-safe
  #         - embroider-optimized

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #         cache: npm
  #     - name: Install Dependencies
  #       run: npm ci
  #     - name: Run Tests
  #       run: ./node_modules/.bin/ember try:one ${{ matrix.try-scenario }}
  #       working-directory: test-app
